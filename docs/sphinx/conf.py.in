# -*- coding: utf-8 -*-
#
# Database Release Manager sphinx configuration file.

import sys
import os

import sphinx_bootstrap_theme


import recommonmark
from recommonmark.transform import AutoStructify

sys.path.append(os.path.realpath(os.path.dirname(__file__)))

# At the bottom of conf.py
def setup(app):
    app.add_config_value('recommonmark_config', {
            'url_resolver': lambda url: github_doc_root + url,
            'auto_toc_tree_section': 'Contents',
            }, True)
    app.add_transform(AutoStructify)

#
# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.doctest',
    'sphinx.ext.ifconfig',
    #'rst2pdf.pdfbuilder',
    'hidden_nodes',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

source_parsers = {
   '.md': 'recommonmark.parser.CommonMarkParser',
}

# General information about the project.
project = u'Database Release Manager'
copyright = u'2017, Geaaru'
author = u'Geaaru'


source_suffix = ['.md', '.rst' ]

version = '@DBRM_VERSION@'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'fruity'

# The master toctree document
master_doc = 'index'

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#html_theme = 'alabaster'
html_theme = 'bootstrap'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    'navbar_sidebarrel': True,
#    'bootswatch_theme': "spacelab",
    'bootswatch_theme': "superhero",

}


# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []
html_theme_path = sphinx_bootstrap_theme.get_html_theme_path()

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
html_title = 'Database Release Manager'

# A shorter title for the navigation bar.  Default is the same as html_title.
html_short_title = 'dbrm'

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}
html_sidebars = {
    '**': [
    ]
}


# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

html_context = {
    'css_files': ['_static/dbrm.css'],
}


# If false, no module index is generated.
html_domain_indices = False
html_use_index = False
html_split_index = False
html_show_sourcelink = False
html_show_sphinx = False
html_show_copyright = False

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'
#html_search_language = 'en'

# A dictionary with options for the search language support, empty by default.
# Now only 'ja' uses this config value
#html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
#html_search_scorer = 'scorer.js'

# Output file base name for HTML help builder.
htmlhelp_basename = 'dbrm'


# -- Options for PDF output -----------------------------------------------

pdf_use_index = False

#pdf_stylesheets = [ 'sphinx', 'pdf.style']
# pdf_stylesheets = [ 'sphinx','kerning','a4', 'pdf.style']
#pdf_style_path =  [os.path.realpath(os.path.dirname(__file__)), 'source/_styles']

pdf_break_level = 0
pdf_breakside = "odd"
pdf_use_coverpage = True
pdf_cover_template = ''
pdf_extensions = ['vectorpdf']
#pdf_page_template = 'cutePage'
pdf_use_toc = False
pdf_use_numbered_links = True
pdf_fit_background_mode = 'scale'

pdf_documents = [('index', u'dbrm_%s' % (version),
                 u'dbrm_%s' % (version),
                 u'dbrm %s' % (version)),]


